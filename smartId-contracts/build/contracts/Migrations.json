{
  "contractName": "Migrations",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "last_completed_migration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "completed",
          "type": "uint256"
        }
      ],
      "name": "setCompleted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "new_address",
          "type": "address"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"last_completed_migration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"completed\",\"type\":\"uint256\"}],\"name\":\"setCompleted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_address\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor of the Migrations contract which assigns owner to the value of msg.sender\"},\"setCompleted(uint256)\":{\"notice\":\"A function with the signature 'setCompleted(uint)' is required. Uses the restricted modifier to update the last_completed_migration variable\"},\"upgrade(address)\":{\"notice\":\"Function which provides the contract upgrade mechanism. This function takes the address of the new contract, creates a handle and calls the setCompleted function on the new contract\"}},\"notice\":\"The Migrations contract is boilerplate code provided by the Truffle IDE that helps deploy contracts to the Ethereum network. This contract stores a number (last_completed_migration) that corresponds to the last applied migration script found in the migrations folder. The numbering convention is x_script_name.ks with x starting at 1. As this contract stores the number of the last deployment script applied, Truffle will not run those scripts again.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Migrations.sol\":\"Migrations\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Migrations.sol\":{\"keccak256\":\"0x65dc32ff476d3a57c70d3bb364d75b40e57b5e68b12ad3fadd002065546f92dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://374f81880ecfa3b19b4dc10bfab431602be605362c7db9c49662dbe618cf1a02\",\"dweb:/ipfs/QmPpvhHcja1A4XCwuMNa6KAL6wSYhAkPBEBYXkjXRFpHRR\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610389806100606000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630900f01014610051578063445df0ac1461006d5780638da5cb5b1461008b578063fdacd576146100a9575b600080fd5b61006b60048036038101906100669190610243565b6100c5565b005b610075610190565b60405161008291906102ce565b60405180910390f35b610093610196565b6040516100a091906102b3565b60405180910390f35b6100c360048036038101906100be919061026c565b6101ba565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018d5760008190508073ffffffffffffffffffffffffffffffffffffffff1663fdacd5766001546040518263ffffffff1660e01b815260040161015991906102ce565b600060405180830381600087803b15801561017357600080fd5b505af1158015610187573d6000803e3d6000fd5b50505050505b50565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561021657806001819055505b50565b60008135905061022881610325565b92915050565b60008135905061023d8161033c565b92915050565b60006020828403121561025557600080fd5b600061026384828501610219565b91505092915050565b60006020828403121561027e57600080fd5b600061028c8482850161022e565b91505092915050565b61029e816102e9565b82525050565b6102ad8161031b565b82525050565b60006020820190506102c86000830184610295565b92915050565b60006020820190506102e360008301846102a4565b92915050565b60006102f4826102fb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61032e816102e9565b811461033957600080fd5b50565b6103458161031b565b811461035057600080fd5b5056fea2646970667358221220eaebada11c6f37d1dabacb3916d333ff576761a610a6f9df25af5e81546f31da64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630900f01014610051578063445df0ac1461006d5780638da5cb5b1461008b578063fdacd576146100a9575b600080fd5b61006b60048036038101906100669190610243565b6100c5565b005b610075610190565b60405161008291906102ce565b60405180910390f35b610093610196565b6040516100a091906102b3565b60405180910390f35b6100c360048036038101906100be919061026c565b6101ba565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018d5760008190508073ffffffffffffffffffffffffffffffffffffffff1663fdacd5766001546040518263ffffffff1660e01b815260040161015991906102ce565b600060405180830381600087803b15801561017357600080fd5b505af1158015610187573d6000803e3d6000fd5b50505050505b50565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561021657806001819055505b50565b60008135905061022881610325565b92915050565b60008135905061023d8161033c565b92915050565b60006020828403121561025557600080fd5b600061026384828501610219565b91505092915050565b60006020828403121561027e57600080fd5b600061028c8482850161022e565b91505092915050565b61029e816102e9565b82525050565b6102ad8161031b565b82525050565b60006020820190506102c86000830184610295565b92915050565b60006020820190506102e360008301846102a4565b92915050565b60006102f4826102fb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61032e816102e9565b811461033957600080fd5b50565b6103458161031b565b811461035057600080fd5b5056fea2646970667358221220eaebada11c6f37d1dabacb3916d333ff576761a610a6f9df25af5e81546f31da64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2107:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:3"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:3",
                "type": ""
              }
            ],
            "src": "7:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:3",
                "type": ""
              }
            ],
            "src": "152:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "363:196:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "409:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "418:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "421:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "411:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "411:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "411:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "384:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "393:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "380:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "380:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "405:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "376:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "373:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "435:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "450:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "464:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "454:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "479:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "514:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "525:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "510:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "510:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "534:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "489:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "489:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "479:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "333:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "344:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "356:6:3",
                "type": ""
              }
            ],
            "src": "297:262:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "631:196:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "677:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "686:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "689:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "679:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "679:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "679:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "652:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "661:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "648:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "648:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "673:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "644:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "641:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "703:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "718:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "732:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "722:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "747:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "782:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "793:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "778:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "778:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "802:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "757:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "757:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "747:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "601:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "612:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "624:6:3",
                "type": ""
              }
            ],
            "src": "565:262:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "898:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "915:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "938:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "920:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "920:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "908:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "908:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "886:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "893:3:3",
                "type": ""
              }
            ],
            "src": "833:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1022:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1039:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1062:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1044:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1044:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1032:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1032:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1032:37:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1010:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1017:3:3",
                "type": ""
              }
            ],
            "src": "957:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1179:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1189:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1201:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1212:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1197:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1197:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1189:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1269:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1282:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1293:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1278:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1278:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1225:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1225:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1225:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1151:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1163:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1174:4:3",
                "type": ""
              }
            ],
            "src": "1081:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1407:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1417:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1429:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1440:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1425:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1425:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1417:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1497:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1510:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1521:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1506:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1506:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1453:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1453:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1453:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1379:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1391:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1402:4:3",
                "type": ""
              }
            ],
            "src": "1309:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1582:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1592:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1621:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1603:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1603:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1592:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1564:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1574:7:3",
                "type": ""
              }
            ],
            "src": "1537:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1684:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1694:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1709:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1716:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1705:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1705:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1694:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1666:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1676:7:3",
                "type": ""
              }
            ],
            "src": "1639:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1816:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1826:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1837:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1826:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1798:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1808:7:3",
                "type": ""
              }
            ],
            "src": "1771:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1897:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1954:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1963:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1966:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1956:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1956:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1956:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1920:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1945:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1927:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1927:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1917:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1917:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1910:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1910:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1907:2:3"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1890:5:3",
                "type": ""
              }
            ],
            "src": "1854:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2025:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2082:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2091:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2094:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2084:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2084:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2084:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2048:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2073:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2055:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2055:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2045:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2045:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2038:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2038:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2035:2:3"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2018:5:3",
                "type": ""
              }
            ],
            "src": "1982:122:3"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "538:1234:1:-:0;;;1035:49;;;;;;;;;;1067:10;1059:5;;:18;;;;;;;;;;;;;;;;;;538:1234;;;;;;",
  "deployedSourceMap": "538:1234:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1595:175;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;591:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;565:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1261:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1595:175;905:5;;;;;;;;;;891:19;;:10;:19;;;887:26;;;1661:19:::1;1694:11;1661:45;;1716:8;:21;;;1738:24;;1716:47;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;912:1;887:26:::0;1595:175;:::o;591:36::-;;;;:::o;565:20::-;;;;;;;;;;;;:::o;1261:109::-;905:5;;;;;;;;;;891:19;;:10;:19;;;887:26;;;1354:9:::1;1327:24;:36;;;;887:26:::0;1261:109;:::o;7:139:3:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:262::-;;673:2;661:9;652:7;648:23;644:32;641:2;;;689:1;686;679:12;641:2;732:1;757:53;802:7;793:6;782:9;778:22;757:53;:::i;:::-;747:63;;703:117;631:196;;;;:::o;833:118::-;920:24;938:5;920:24;:::i;:::-;915:3;908:37;898:53;;:::o;957:118::-;1044:24;1062:5;1044:24;:::i;:::-;1039:3;1032:37;1022:53;;:::o;1081:222::-;;1212:2;1201:9;1197:18;1189:26;;1225:71;1293:1;1282:9;1278:17;1269:6;1225:71;:::i;:::-;1179:124;;;;:::o;1309:222::-;;1440:2;1429:9;1425:18;1417:26;;1453:71;1521:1;1510:9;1506:17;1497:6;1453:71;:::i;:::-;1407:124;;;;:::o;1537:96::-;;1603:24;1621:5;1603:24;:::i;:::-;1592:35;;1582:51;;;:::o;1639:126::-;;1716:42;1709:5;1705:54;1694:65;;1684:81;;;:::o;1771:77::-;;1837:5;1826:16;;1816:32;;;:::o;1854:122::-;1927:24;1945:5;1927:24;:::i;:::-;1920:5;1917:35;1907:2;;1966:1;1963;1956:12;1907:2;1897:79;:::o;1982:122::-;2055:24;2073:5;2055:24;:::i;:::-;2048:5;2045:35;2035:2;;2094:1;2091;2084:12;2035:2;2025:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * The Migrations contract is boilerplate code provided by the Truffle IDE that\n * helps deploy contracts to the Ethereum network.\n * This contract stores a number (last_completed_migration) that corresponds to the\n * last applied migration script found in the migrations folder.\n * The numbering convention is x_script_name.ks with x starting at 1.\n * As this contract stores the number of the last deployment script applied,\n * Truffle will not run those scripts again.\n */\n\ncontract Migrations {\n\n    address public owner;\n    uint public last_completed_migration;\n\n    /**\n     * Modifier to check to see if the value of msg.sender is the same as owner.\n     * The underscore _ denotes the inclusion of the remainder of the function body\n     * to which the modifier is applied\n     */\n    modifier restricted() {\n        if (msg.sender == owner) _;\n    }\n\n    /**\n     * Constructor of the Migrations contract which assigns owner to the value of msg.sender\n     */\n    constructor() {\n        owner = msg.sender;\n    }\n\n    /**\n     * A function with the signature 'setCompleted(uint)' is required.\n     * Uses the restricted modifier to update the last_completed_migration variable\n     */\n    function setCompleted(uint completed) public restricted {\n        last_completed_migration = completed;\n    }\n\n    /**\n     * Function which provides the contract upgrade mechanism.\n     * This function takes the address of the new contract, creates a handle and\n     * calls the setCompleted function on the new contract\n     */\n    function upgrade(address new_address) public restricted {\n        Migrations upgraded = Migrations(new_address);\n        upgraded.setCompleted(last_completed_migration);\n    }\n}\n",
  "sourcePath": "/Users/mariakhan/Desktop/whitewash_Repo/White_Wash_Attack/smartId-contracts/contracts/Migrations.sol",
  "ast": {
    "absolutePath": "project:/contracts/Migrations.sol",
    "exportedSymbols": {
      "Migrations": [
        101
      ]
    },
    "id": 102,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 40,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 41,
          "nodeType": "StructuredDocumentation",
          "src": "57:479:1",
          "text": " The Migrations contract is boilerplate code provided by the Truffle IDE that\n helps deploy contracts to the Ethereum network.\n This contract stores a number (last_completed_migration) that corresponds to the\n last applied migration script found in the migrations folder.\n The numbering convention is x_script_name.ks with x starting at 1.\n As this contract stores the number of the last deployment script applied,\n Truffle will not run those scripts again."
        },
        "fullyImplemented": true,
        "id": 101,
        "linearizedBaseContracts": [
          101
        ],
        "name": "Migrations",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 43,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "565:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "565:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "445df0ac",
            "id": 45,
            "mutability": "mutable",
            "name": "last_completed_migration",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "591:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "591:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "877:43:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 48,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "891:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "891:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 50,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "905:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "891:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53,
                  "nodeType": "IfStatement",
                  "src": "887:26:1",
                  "trueBody": {
                    "id": 52,
                    "nodeType": "PlaceholderStatement",
                    "src": "912:1:1"
                  }
                }
              ]
            },
            "documentation": {
              "id": 46,
              "nodeType": "StructuredDocumentation",
              "src": "634:216:1",
              "text": " Modifier to check to see if the value of msg.sender is the same as owner.\n The underscore _ denotes the inclusion of the remainder of the function body\n to which the modifier is applied"
            },
            "id": 55,
            "name": "restricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "874:2:1"
            },
            "src": "855:65:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "1049:35:1",
              "statements": [
                {
                  "expression": {
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "1059:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 60,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1067:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1067:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1059:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:18:1"
                }
              ]
            },
            "documentation": {
              "id": 56,
              "nodeType": "StructuredDocumentation",
              "src": "926:104:1",
              "text": " Constructor of the Migrations contract which assigns owner to the value of msg.sender"
            },
            "id": 65,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1046:2:1"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1049:0:1"
            },
            "scope": 101,
            "src": "1035:49:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "1317:53:1",
              "statements": [
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73,
                      "name": "last_completed_migration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "1327:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 74,
                      "name": "completed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "1354:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1327:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:36:1"
                }
              ]
            },
            "documentation": {
              "id": 66,
              "nodeType": "StructuredDocumentation",
              "src": "1090:166:1",
              "text": " A function with the signature 'setCompleted(uint)' is required.\n Uses the restricted modifier to update the last_completed_migration variable"
            },
            "functionSelector": "fdacd576",
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 71,
                "modifierName": {
                  "id": 70,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55,
                  "src": "1306:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1306:10:1"
              }
            ],
            "name": "setCompleted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "completed",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1283:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1282:16:1"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:0:1"
            },
            "scope": 101,
            "src": "1261:109:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "1651:119:1",
              "statements": [
                {
                  "assignments": [
                    88
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88,
                      "mutability": "mutable",
                      "name": "upgraded",
                      "nodeType": "VariableDeclaration",
                      "scope": 99,
                      "src": "1661:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Migrations_$101",
                        "typeString": "contract Migrations"
                      },
                      "typeName": {
                        "id": 87,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86,
                          "name": "Migrations",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 101,
                          "src": "1661:10:1"
                        },
                        "referencedDeclaration": 101,
                        "src": "1661:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Migrations_$101",
                          "typeString": "contract Migrations"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 92,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 90,
                        "name": "new_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1694:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89,
                      "name": "Migrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "1683:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Migrations_$101_$",
                        "typeString": "type(contract Migrations)"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1683:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Migrations_$101",
                      "typeString": "contract Migrations"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1661:45:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 96,
                        "name": "last_completed_migration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1738:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 93,
                        "name": "upgraded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "1716:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Migrations_$101",
                          "typeString": "contract Migrations"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setCompleted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "1716:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1716:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1716:47:1"
                }
              ]
            },
            "documentation": {
              "id": 79,
              "nodeType": "StructuredDocumentation",
              "src": "1376:214:1",
              "text": " Function which provides the contract upgrade mechanism.\n This function takes the address of the new contract, creates a handle and\n calls the setCompleted function on the new contract"
            },
            "functionSelector": "0900f010",
            "id": 100,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 84,
                "modifierName": {
                  "id": 83,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55,
                  "src": "1640:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1640:10:1"
              }
            ],
            "name": "upgrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "new_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1612:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1612:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1611:21:1"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1651:0:1"
            },
            "scope": 101,
            "src": "1595:175:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 102,
        "src": "538:1234:1"
      }
    ],
    "src": "32:1741:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "1724183042915": {
      "events": {},
      "links": {},
      "address": "0x17E2ed474C99B338a3350c8aBFCB1195c236779c",
      "transactionHash": "0xac90bc1c15f639eb844d753691e78bd2470d5d4457e41fdd9a7decfa1f3eb7d9"
    },
    "1726787922811": {
      "events": {},
      "links": {},
      "address": "0xc55efA41ab84De1BFab02E805E3c1e29587FA587",
      "transactionHash": "0x9ef7d7ec52322e6581b4e07e41cad96781c0d801782055f1d046aa4facafb825"
    },
    "1726955388035": {
      "events": {},
      "links": {},
      "address": "0x8C7C3fc8170242F3fB567f6107a73911017823ba",
      "transactionHash": "0x1b0b1fdfc224cb7a5231498d7a02076ea7833f207812c8b6f8a13b2e9189030e"
    },
    "1726956984345": {
      "events": {},
      "links": {},
      "address": "0xaB3342cADC77a628FC586078F9aE697e463dEb83",
      "transactionHash": "0x187309184a4df9ac6ab56c3b93b09f2293c9e4e53d27e28f7854d390d662252f"
    },
    "1726958555586": {
      "events": {},
      "links": {},
      "address": "0xd1487eC6C98CD98c0F354C9BdD367Db366Cbc6CD",
      "transactionHash": "0x48ff5c8854c37235f312c6b33b29308017011968a28c2414715c75a4c92c09a1"
    },
    "1726959191893": {
      "events": {},
      "links": {},
      "address": "0x83638977121Ce2A378e69dfAEAFd3B2D8f0edaBD",
      "transactionHash": "0x82f784e3313bee2eb7a443cd1610d65469ca52b64baf5ce852538aa204b10f74"
    },
    "1731099788541": {
      "events": {},
      "links": {},
      "address": "0x14522Aa192B50385b7f54ACf26F51D8b67911d87",
      "transactionHash": "0xa515722c86a1c8ff3f6721aa8f405f930b47300569fdb9aa2b006bcfea9e17e1"
    },
    "1731160800961": {
      "events": {},
      "links": {},
      "address": "0xfb06d27687ba783cD38c143702A9d94c38C3D873",
      "transactionHash": "0x2a4f4d89e53587b1894f83ebd0e4bd9b419d2b89f61af531d223704d911f30c0"
    },
    "1737797376722": {
      "events": {},
      "links": {},
      "address": "0xd31634B5E2A0B91E126c7DB054D75500523D5eed",
      "transactionHash": "0xda25e175cec8c7a3c6dbfc66603c6825bfe73ca7e18c79f0c2bc71107a208ef7"
    },
    "1737968779599": {
      "events": {},
      "links": {},
      "address": "0x51B3188b8a1D02195e10BC97D6275DAb39C96E39",
      "transactionHash": "0x7d080a713125e0e64d981afc4992d78f12afb60fa6529906e36605130b76fa6e"
    },
    "1749312357586": {
      "events": {},
      "links": {},
      "address": "0x55c61656c948361B46e4A14579d22eAEE580700d",
      "transactionHash": "0x601012e616759cfe7e3e3dadfb67e36cb65f95ead85a402c1ca32cc456fdfe28"
    },
    "1749363702752": {
      "events": {},
      "links": {},
      "address": "0xe8e5815Aa1F2D3244F68f3ad08Bf80a30Be25b2E",
      "transactionHash": "0xa35acb032d015ac14fdf3e8df3117efca2948c85e2b8a2efb02996064a27b277"
    },
    "1749366980410": {
      "events": {},
      "links": {},
      "address": "0x636A09a998DE4C4382113dDa39275088c5a6946a",
      "transactionHash": "0xe9e435e4506b33151be7fdee5f102a3a192de8578b01da0897019987afd42a9a"
    },
    "1750686968740": {
      "events": {},
      "links": {},
      "address": "0xa6A6f04B7D3267eFf72C80F15f28f1fcCfbd312a",
      "transactionHash": "0x60e27db7771621ee83038c6682ce9716dea10d6117ce357f27389080c4a40744"
    },
    "1751346769690": {
      "events": {},
      "links": {},
      "address": "0x802bF9925C0193eE632e2cA2D65697862281b6E8",
      "transactionHash": "0xba7fc08349136c45b2d7486919c82f01095092c48570e29a83491cf4cad4d37f"
    },
    "1751385763489": {
      "events": {},
      "links": {},
      "address": "0x5BA82038D9e8741B9F22014D1fB6B97E00681537",
      "transactionHash": "0xbe209043f1be5c6b9f9aec473755ece4bdef725290cb4421bf378c6b095bd727"
    },
    "1751856906183": {
      "events": {},
      "links": {},
      "address": "0x98154238a5B5C22B6c0E73a59Aaf413bBb02fcD1",
      "transactionHash": "0xd281bae1ce3737525c0d973bf4dcb40df34949f602848e676988da45fc05bc49"
    },
    "1751868447148": {
      "events": {},
      "links": {},
      "address": "0x93F1d4d49eA171e94Fa0ae92d9300235D2d61c74",
      "transactionHash": "0x7b4e70a3979e866a1458aefd367ac0c38ce85d4885c1b2f692656fb3474b804c"
    },
    "1751922397590": {
      "events": {},
      "links": {},
      "address": "0x47321566B123bd42E96d8635De33292116bb2795",
      "transactionHash": "0x5404c7574e8d9851eb6e5978c5ea80a3ec20e9035e6b529b992e5a00dbe9ee99"
    },
    "1751937082332": {
      "events": {},
      "links": {},
      "address": "0x2E1642A007476FB589FB8F3bd78dEE1fB5661CB5",
      "transactionHash": "0x53dd896041145a14ca87b875e0fd2b57456a8a1fc073f5a2516a2684275d16f4"
    },
    "1752082768257": {
      "events": {},
      "links": {},
      "address": "0xd90092f3c2165d4f34a3A7E66022d74B31781c27",
      "transactionHash": "0xa12ed64f69aa9ee9ecd20c3ea0077b14b30657d4fd6d2f4f1288c53c1364e3db"
    },
    "1752083037012": {
      "events": {},
      "links": {},
      "address": "0x06a3dD60a8322aD5AC6D05Ad2F43fd961e6F28AA",
      "transactionHash": "0x224ecaaba9b7616c5682dea30ac1c7c81d6a4ffbb2ee2c22ff62d3f8436b58b5"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-07-09T17:44:23.306Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor of the Migrations contract which assigns owner to the value of msg.sender"
      },
      "setCompleted(uint256)": {
        "notice": "A function with the signature 'setCompleted(uint)' is required. Uses the restricted modifier to update the last_completed_migration variable"
      },
      "upgrade(address)": {
        "notice": "Function which provides the contract upgrade mechanism. This function takes the address of the new contract, creates a handle and calls the setCompleted function on the new contract"
      }
    },
    "notice": "The Migrations contract is boilerplate code provided by the Truffle IDE that helps deploy contracts to the Ethereum network. This contract stores a number (last_completed_migration) that corresponds to the last applied migration script found in the migrations folder. The numbering convention is x_script_name.ks with x starting at 1. As this contract stores the number of the last deployment script applied, Truffle will not run those scripts again.",
    "version": 1
  }
}